/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pkce-challenge";
exports.ids = ["vendor-chunks/pkce-challenge"];
exports.modules = {

/***/ "(rsc)/./node_modules/pkce-challenge/dist/main.js":
/*!**************************************************!*\
  !*** ./node_modules/pkce-challenge/dist/main.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var $iEn1Z$cryptojslibtypedarrays = __webpack_require__(/*! crypto-js/lib-typedarrays */ \"(rsc)/./node_modules/crypto-js/lib-typedarrays.js\");\nvar $iEn1Z$cryptojssha256 = __webpack_require__(/*! crypto-js/sha256 */ \"(rsc)/./node_modules/crypto-js/sha256.js\");\nvar $iEn1Z$cryptojsencbase64url = __webpack_require__(/*! crypto-js/enc-base64url */ \"(rsc)/./node_modules/crypto-js/enc-base64url.js\");\nfunction $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$defineInteropFlag(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true,\n        configurable: true\n    });\n}\nfunction $parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\n$parcel$defineInteropFlag(module.exports);\n$parcel$export(module.exports, \"generateChallenge\", ()=>$f5bfd4ce37214f4f$export$6a61b14641fe7480);\n$parcel$export(module.exports, \"default\", ()=>$f5bfd4ce37214f4f$export$2e2bcd8739ae039);\n$parcel$export(module.exports, \"verifyChallenge\", ()=>$f5bfd4ce37214f4f$export$4faf58fdf1185e54);\n/**\n * Thanks to @SEIAROTg on stackoverflow:\n * \"Convert a 32bit integer into 4 bytes of data in javascript\"\n * @param num The 32bit integer\n * @returns An ArrayBuffer representing 4 bytes of binary data\n */ function $f5bfd4ce37214f4f$var$toBytesInt32(num) {\n    const arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return arr;\n}\n/**\n * Creates an array of length `size` of random bytes\n * @param size\n * @returns Array of random ints (0 to 255)\n */ function $f5bfd4ce37214f4f$var$getRandomValues(size) {\n    const randoms = $parcel$interopDefault($iEn1Z$cryptojslibtypedarrays).random(size);\n    const randoms1byte = [];\n    randoms.words.forEach((word)=>{\n        const arr = $f5bfd4ce37214f4f$var$toBytesInt32(word);\n        const fourByteWord = new Uint8Array(arr);\n        for(let i = 0; i < 4; i++)randoms1byte.push(fourByteWord[i]);\n    });\n    return randoms1byte;\n}\n/** Generate cryptographically strong random string\n * @param size The desired length of the string\n * @returns The random string\n */ function $f5bfd4ce37214f4f$var$random(size) {\n    const mask = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~\";\n    let result = \"\";\n    const randomUints = $f5bfd4ce37214f4f$var$getRandomValues(size);\n    for(let i = 0; i < size; i++){\n        // cap the value of the randomIndex to mask.length - 1\n        const randomIndex = randomUints[i] % mask.length;\n        result += mask[randomIndex];\n    }\n    return result;\n}\n/** Generate a PKCE challenge verifier\n * @param length Length of the verifier\n * @returns A random verifier `length` characters long\n */ function $f5bfd4ce37214f4f$var$generateVerifier(length) {\n    return $f5bfd4ce37214f4f$var$random(length);\n}\nfunction $f5bfd4ce37214f4f$export$6a61b14641fe7480(code_verifier) {\n    return $parcel$interopDefault($iEn1Z$cryptojssha256)(code_verifier).toString($parcel$interopDefault($iEn1Z$cryptojsencbase64url));\n}\nfunction $f5bfd4ce37214f4f$export$2e2bcd8739ae039(length) {\n    if (!length) length = 43;\n    if (length < 43 || length > 128) throw `Expected a length between 43 and 128. Received ${length}.`;\n    const verifier = $f5bfd4ce37214f4f$var$generateVerifier(length);\n    const challenge = $f5bfd4ce37214f4f$export$6a61b14641fe7480(verifier);\n    return {\n        code_verifier: verifier,\n        code_challenge: challenge\n    };\n}\nfunction $f5bfd4ce37214f4f$export$4faf58fdf1185e54(code_verifier, expectedChallenge) {\n    const actualChallenge = $f5bfd4ce37214f4f$export$6a61b14641fe7480(code_verifier);\n    return actualChallenge === expectedChallenge;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/pkce-challenge/dist/main.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pkce-challenge/dist/main.js":
/*!**************************************************!*\
  !*** ./node_modules/pkce-challenge/dist/main.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var $iEn1Z$cryptojslibtypedarrays = __webpack_require__(/*! crypto-js/lib-typedarrays */ \"(ssr)/./node_modules/crypto-js/lib-typedarrays.js\");\nvar $iEn1Z$cryptojssha256 = __webpack_require__(/*! crypto-js/sha256 */ \"(ssr)/./node_modules/crypto-js/sha256.js\");\nvar $iEn1Z$cryptojsencbase64url = __webpack_require__(/*! crypto-js/enc-base64url */ \"(ssr)/./node_modules/crypto-js/enc-base64url.js\");\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"generateChallenge\", () => $f5bfd4ce37214f4f$export$6a61b14641fe7480);\n$parcel$export(module.exports, \"default\", () => $f5bfd4ce37214f4f$export$2e2bcd8739ae039);\n$parcel$export(module.exports, \"verifyChallenge\", () => $f5bfd4ce37214f4f$export$4faf58fdf1185e54);\n\n\n\n/**\n * Thanks to @SEIAROTg on stackoverflow:\n * \"Convert a 32bit integer into 4 bytes of data in javascript\"\n * @param num The 32bit integer\n * @returns An ArrayBuffer representing 4 bytes of binary data\n */ function $f5bfd4ce37214f4f$var$toBytesInt32(num) {\n    const arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return arr;\n}\n/**\n * Creates an array of length `size` of random bytes\n * @param size\n * @returns Array of random ints (0 to 255)\n */ function $f5bfd4ce37214f4f$var$getRandomValues(size) {\n    const randoms = ($parcel$interopDefault($iEn1Z$cryptojslibtypedarrays)).random(size);\n    const randoms1byte = [];\n    randoms.words.forEach((word)=>{\n        const arr = $f5bfd4ce37214f4f$var$toBytesInt32(word);\n        const fourByteWord = new Uint8Array(arr);\n        for(let i = 0; i < 4; i++)randoms1byte.push(fourByteWord[i]);\n    });\n    return randoms1byte;\n}\n/** Generate cryptographically strong random string\n * @param size The desired length of the string\n * @returns The random string\n */ function $f5bfd4ce37214f4f$var$random(size) {\n    const mask = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~\";\n    let result = \"\";\n    const randomUints = $f5bfd4ce37214f4f$var$getRandomValues(size);\n    for(let i = 0; i < size; i++){\n        // cap the value of the randomIndex to mask.length - 1\n        const randomIndex = randomUints[i] % mask.length;\n        result += mask[randomIndex];\n    }\n    return result;\n}\n/** Generate a PKCE challenge verifier\n * @param length Length of the verifier\n * @returns A random verifier `length` characters long\n */ function $f5bfd4ce37214f4f$var$generateVerifier(length) {\n    return $f5bfd4ce37214f4f$var$random(length);\n}\nfunction $f5bfd4ce37214f4f$export$6a61b14641fe7480(code_verifier) {\n    return ($parcel$interopDefault($iEn1Z$cryptojssha256))(code_verifier).toString(($parcel$interopDefault($iEn1Z$cryptojsencbase64url)));\n}\nfunction $f5bfd4ce37214f4f$export$2e2bcd8739ae039(length) {\n    if (!length) length = 43;\n    if (length < 43 || length > 128) throw `Expected a length between 43 and 128. Received ${length}.`;\n    const verifier = $f5bfd4ce37214f4f$var$generateVerifier(length);\n    const challenge = $f5bfd4ce37214f4f$export$6a61b14641fe7480(verifier);\n    return {\n        code_verifier: verifier,\n        code_challenge: challenge\n    };\n}\nfunction $f5bfd4ce37214f4f$export$4faf58fdf1185e54(code_verifier, expectedChallenge) {\n    const actualChallenge = $f5bfd4ce37214f4f$export$6a61b14641fe7480(code_verifier);\n    return actualChallenge === expectedChallenge;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGtjZS1jaGFsbGVuZ2UvZGlzdC9tYWluLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9DQUFvQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUN2RSw0QkFBNEIsbUJBQU8sQ0FBQyxrRUFBa0I7QUFDdEQsa0NBQWtDLG1CQUFPLENBQUMsZ0ZBQXlCOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxnQ0FBZ0M7QUFDMUU7QUFDQTtBQUNBLCtCQUErQixxREFBcUQ7QUFDcEY7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0EsbUNBQW1DLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsT0FBTztBQUM5QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixPQUFPO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aXgtY21zLW5leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9wa2NlLWNoYWxsZW5nZS9kaXN0L21haW4uanM/NTNhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGlFbjFaJGNyeXB0b2pzbGlidHlwZWRhcnJheXMgPSByZXF1aXJlKFwiY3J5cHRvLWpzL2xpYi10eXBlZGFycmF5c1wiKTtcbnZhciAkaUVuMVokY3J5cHRvanNzaGEyNTYgPSByZXF1aXJlKFwiY3J5cHRvLWpzL3NoYTI1NlwiKTtcbnZhciAkaUVuMVokY3J5cHRvanNlbmNiYXNlNjR1cmwgPSByZXF1aXJlKFwiY3J5cHRvLWpzL2VuYy1iYXNlNjR1cmxcIik7XG5cbmZ1bmN0aW9uICRwYXJjZWwkaW50ZXJvcERlZmF1bHQoYSkge1xuICByZXR1cm4gYSAmJiBhLl9fZXNNb2R1bGUgPyBhLmRlZmF1bHQgOiBhO1xufVxuZnVuY3Rpb24gJHBhcmNlbCRkZWZpbmVJbnRlcm9wRmxhZyhhKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLCAnX19lc01vZHVsZScsIHt2YWx1ZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSk7XG59XG5mdW5jdGlvbiAkcGFyY2VsJGV4cG9ydChlLCBuLCB2LCBzKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBuLCB7Z2V0OiB2LCBzZXQ6IHMsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0pO1xufVxuXG4kcGFyY2VsJGRlZmluZUludGVyb3BGbGFnKG1vZHVsZS5leHBvcnRzKTtcblxuJHBhcmNlbCRleHBvcnQobW9kdWxlLmV4cG9ydHMsIFwiZ2VuZXJhdGVDaGFsbGVuZ2VcIiwgKCkgPT4gJGY1YmZkNGNlMzcyMTRmNGYkZXhwb3J0JDZhNjFiMTQ2NDFmZTc0ODApO1xuJHBhcmNlbCRleHBvcnQobW9kdWxlLmV4cG9ydHMsIFwiZGVmYXVsdFwiLCAoKSA9PiAkZjViZmQ0Y2UzNzIxNGY0ZiRleHBvcnQkMmUyYmNkODczOWFlMDM5KTtcbiRwYXJjZWwkZXhwb3J0KG1vZHVsZS5leHBvcnRzLCBcInZlcmlmeUNoYWxsZW5nZVwiLCAoKSA9PiAkZjViZmQ0Y2UzNzIxNGY0ZiRleHBvcnQkNGZhZjU4ZmRmMTE4NWU1NCk7XG5cblxuXG4vKipcbiAqIFRoYW5rcyB0byBAU0VJQVJPVGcgb24gc3RhY2tvdmVyZmxvdzpcbiAqIFwiQ29udmVydCBhIDMyYml0IGludGVnZXIgaW50byA0IGJ5dGVzIG9mIGRhdGEgaW4gamF2YXNjcmlwdFwiXG4gKiBAcGFyYW0gbnVtIFRoZSAzMmJpdCBpbnRlZ2VyXG4gKiBAcmV0dXJucyBBbiBBcnJheUJ1ZmZlciByZXByZXNlbnRpbmcgNCBieXRlcyBvZiBiaW5hcnkgZGF0YVxuICovIGZ1bmN0aW9uICRmNWJmZDRjZTM3MjE0ZjRmJHZhciR0b0J5dGVzSW50MzIobnVtKSB7XG4gICAgY29uc3QgYXJyID0gbmV3IEFycmF5QnVmZmVyKDQpOyAvLyBhbiBJbnQzMiB0YWtlcyA0IGJ5dGVzXG4gICAgY29uc3QgdmlldyA9IG5ldyBEYXRhVmlldyhhcnIpO1xuICAgIHZpZXcuc2V0VWludDMyKDAsIG51bSwgZmFsc2UpOyAvLyBieXRlT2Zmc2V0ID0gMDsgbGl0dGVFbmRpYW4gPSBmYWxzZVxuICAgIHJldHVybiBhcnI7XG59XG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgbGVuZ3RoIGBzaXplYCBvZiByYW5kb20gYnl0ZXNcbiAqIEBwYXJhbSBzaXplXG4gKiBAcmV0dXJucyBBcnJheSBvZiByYW5kb20gaW50cyAoMCB0byAyNTUpXG4gKi8gZnVuY3Rpb24gJGY1YmZkNGNlMzcyMTRmNGYkdmFyJGdldFJhbmRvbVZhbHVlcyhzaXplKSB7XG4gICAgY29uc3QgcmFuZG9tcyA9ICgkcGFyY2VsJGludGVyb3BEZWZhdWx0KCRpRW4xWiRjcnlwdG9qc2xpYnR5cGVkYXJyYXlzKSkucmFuZG9tKHNpemUpO1xuICAgIGNvbnN0IHJhbmRvbXMxYnl0ZSA9IFtdO1xuICAgIHJhbmRvbXMud29yZHMuZm9yRWFjaCgod29yZCk9PntcbiAgICAgICAgY29uc3QgYXJyID0gJGY1YmZkNGNlMzcyMTRmNGYkdmFyJHRvQnl0ZXNJbnQzMih3b3JkKTtcbiAgICAgICAgY29uc3QgZm91ckJ5dGVXb3JkID0gbmV3IFVpbnQ4QXJyYXkoYXJyKTtcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IDQ7IGkrKylyYW5kb21zMWJ5dGUucHVzaChmb3VyQnl0ZVdvcmRbaV0pO1xuICAgIH0pO1xuICAgIHJldHVybiByYW5kb21zMWJ5dGU7XG59XG4vKiogR2VuZXJhdGUgY3J5cHRvZ3JhcGhpY2FsbHkgc3Ryb25nIHJhbmRvbSBzdHJpbmdcbiAqIEBwYXJhbSBzaXplIFRoZSBkZXNpcmVkIGxlbmd0aCBvZiB0aGUgc3RyaW5nXG4gKiBAcmV0dXJucyBUaGUgcmFuZG9tIHN0cmluZ1xuICovIGZ1bmN0aW9uICRmNWJmZDRjZTM3MjE0ZjRmJHZhciRyYW5kb20oc2l6ZSkge1xuICAgIGNvbnN0IG1hc2sgPSBcImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5LS5fflwiO1xuICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgIGNvbnN0IHJhbmRvbVVpbnRzID0gJGY1YmZkNGNlMzcyMTRmNGYkdmFyJGdldFJhbmRvbVZhbHVlcyhzaXplKTtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKXtcbiAgICAgICAgLy8gY2FwIHRoZSB2YWx1ZSBvZiB0aGUgcmFuZG9tSW5kZXggdG8gbWFzay5sZW5ndGggLSAxXG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gcmFuZG9tVWludHNbaV0gJSBtYXNrLmxlbmd0aDtcbiAgICAgICAgcmVzdWx0ICs9IG1hc2tbcmFuZG9tSW5kZXhdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqIEdlbmVyYXRlIGEgUEtDRSBjaGFsbGVuZ2UgdmVyaWZpZXJcbiAqIEBwYXJhbSBsZW5ndGggTGVuZ3RoIG9mIHRoZSB2ZXJpZmllclxuICogQHJldHVybnMgQSByYW5kb20gdmVyaWZpZXIgYGxlbmd0aGAgY2hhcmFjdGVycyBsb25nXG4gKi8gZnVuY3Rpb24gJGY1YmZkNGNlMzcyMTRmNGYkdmFyJGdlbmVyYXRlVmVyaWZpZXIobGVuZ3RoKSB7XG4gICAgcmV0dXJuICRmNWJmZDRjZTM3MjE0ZjRmJHZhciRyYW5kb20obGVuZ3RoKTtcbn1cbmZ1bmN0aW9uICRmNWJmZDRjZTM3MjE0ZjRmJGV4cG9ydCQ2YTYxYjE0NjQxZmU3NDgwKGNvZGVfdmVyaWZpZXIpIHtcbiAgICByZXR1cm4gKCRwYXJjZWwkaW50ZXJvcERlZmF1bHQoJGlFbjFaJGNyeXB0b2pzc2hhMjU2KSkoY29kZV92ZXJpZmllcikudG9TdHJpbmcoKCRwYXJjZWwkaW50ZXJvcERlZmF1bHQoJGlFbjFaJGNyeXB0b2pzZW5jYmFzZTY0dXJsKSkpO1xufVxuZnVuY3Rpb24gJGY1YmZkNGNlMzcyMTRmNGYkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOShsZW5ndGgpIHtcbiAgICBpZiAoIWxlbmd0aCkgbGVuZ3RoID0gNDM7XG4gICAgaWYgKGxlbmd0aCA8IDQzIHx8IGxlbmd0aCA+IDEyOCkgdGhyb3cgYEV4cGVjdGVkIGEgbGVuZ3RoIGJldHdlZW4gNDMgYW5kIDEyOC4gUmVjZWl2ZWQgJHtsZW5ndGh9LmA7XG4gICAgY29uc3QgdmVyaWZpZXIgPSAkZjViZmQ0Y2UzNzIxNGY0ZiR2YXIkZ2VuZXJhdGVWZXJpZmllcihsZW5ndGgpO1xuICAgIGNvbnN0IGNoYWxsZW5nZSA9ICRmNWJmZDRjZTM3MjE0ZjRmJGV4cG9ydCQ2YTYxYjE0NjQxZmU3NDgwKHZlcmlmaWVyKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBjb2RlX3ZlcmlmaWVyOiB2ZXJpZmllcixcbiAgICAgICAgY29kZV9jaGFsbGVuZ2U6IGNoYWxsZW5nZVxuICAgIH07XG59XG5mdW5jdGlvbiAkZjViZmQ0Y2UzNzIxNGY0ZiRleHBvcnQkNGZhZjU4ZmRmMTE4NWU1NChjb2RlX3ZlcmlmaWVyLCBleHBlY3RlZENoYWxsZW5nZSkge1xuICAgIGNvbnN0IGFjdHVhbENoYWxsZW5nZSA9ICRmNWJmZDRjZTM3MjE0ZjRmJGV4cG9ydCQ2YTYxYjE0NjQxZmU3NDgwKGNvZGVfdmVyaWZpZXIpO1xuICAgIHJldHVybiBhY3R1YWxDaGFsbGVuZ2UgPT09IGV4cGVjdGVkQ2hhbGxlbmdlO1xufVxuXG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pkce-challenge/dist/main.js\n");

/***/ })

};
;